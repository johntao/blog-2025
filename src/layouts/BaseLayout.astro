---
interface Props {
  title: string;
  cls: string;
}

const { title, cls } = Astro.props;

const navItems = [
  { label: 'Home', href: '/' },
  { label: 'Posts', href: '/posts' },
  { label: 'AI-Gen', href: '/ai-gen' },
  { label: 'About', href: '/about' }
];

const currentPath = Astro.url.pathname;
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{title} - JT's Weblog</title>
  <link rel="stylesheet" href="/style.css">
</head>
<body>
  <header>
    <h1><a href="/" id="site-heading">JT's Weblog</a></h1>
    <!-- <p>Thoughts, writings, and musings</p> -->
  </header>

  <!-- <hr> -->

  <main class={cls}>
    <slot />
  </main>

  <hr>

  <nav>
    <p>
      {navItems.map((item, index) => (
        <>
          {item.href === currentPath ? (
            <strong>{item.label}</strong>
          ) : (
            <a href={item.href}>{item.label}</a>
          )}
          {index < navItems.length - 1 && ' | '}
        </>
      ))}
    </p>
  </nav>

  <script>
    const heading = document.getElementById('site-heading');
    if (heading) {
      heading.addEventListener('click', (e) => {
        const isRootPage = window.location.pathname === '/';
        if (isRootPage) return;
        if (!document.referrer) return;

        try {
          const referrerUrl = new URL(document.referrer);
          if (referrerUrl.origin !== window.location.origin) return;

          e.preventDefault();
          history.back();
        } catch (err) {
          // If URL parsing fails, let default behavior happen
        }
      });
    }
  </script>
</body>
</html>
