---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';

export async function getStaticPaths() {
  // Fetch entries from all collections
  const defaultEntries = await getCollection('default');
  const aiGeneratedEntries = await getCollection('ai-generated');

  // Map entries with collection info
  const rtn = [
    ...defaultEntries.map(entry => ({
      params: { slug: entry.slug },
      props: { entry, nextPost: null, prevPost: null },
    })),
    ...aiGeneratedEntries.map(entry => ({
      params: { slug: entry.slug },
      props: { entry, nextPost: null, prevPost: null },
    })),
  ];

  // Sort entries by date (newest first)
  const sortedEntries = rtn.sort((a, b) =>
    b.props.entry.data.pubDate.valueOf() - a.props.entry.data.pubDate.valueOf()
  );

  // Assign nextPost and prevPost for each entry
  sortedEntries.forEach((item, index) => {
    item.props.nextPost = index > 0 ? sortedEntries[index - 1].props.entry : null;
    item.props.prevPost = index < sortedEntries.length - 1 ? sortedEntries[index + 1].props.entry : null;
  });

  return sortedEntries;
}

const { entry, nextPost, prevPost, } = Astro.props;
const { Content, remarkPluginFrontmatter } = await entry.render();

const formattedDate = entry.data.pubDate.toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});

---

<BaseLayout title={entry.data.title}>
  <article>
    <h2>{entry.data.title}</h2>
    <pre>{entry.collection === 'ai-generated' ? 'AI-GENERATED\n' : ''}est: {remarkPluginFrontmatter.minutesRead}
pub: {formattedDate}</pre>
    <hr>

    <Content />
  </article>

  <hr>

  <nav>
    <p>Next: {nextPost ?
      <a href={`/posts/${nextPost.slug}`}>{nextPost.data.title}</a> :
      <strong>You've reached the newest post</strong>}
    </p>
    <p>Prev: {prevPost ?
      <a href={`/posts/${prevPost.slug}`}>{prevPost.data.title}</a> :
      <strong>You've reached the oldest post</strong>}
    </p>
  </nav>

</BaseLayout>
